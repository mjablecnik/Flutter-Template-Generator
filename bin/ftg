#!/bin/bash

ftg_dir_path=$(echo "$(dirname $0)/.." | sed -e 's/\/bin\/\.\.\/scripts\/\.\.//;')
script_path=${ftg_dir_path}/scripts/

## Check required commands:
if [[ -z $(which ack) ]]; then
  echo "You need install ack"
  exit 1
fi

if [[ -z $(which perl) ]]; then
  echo "You need install perl"
  exit 1
fi

if [[ -z $(which flutter) ]]; then
  echo "You need install flutter"
  exit 1
fi

show_generator_help () {
    echo "
    Flags:
        -n --name                       Project name (in format: my_flutter_project)
        -d --description                Project description
        -a --author                     Project author
        -s --state-management
        -o --folders-organization
        -p --project-type
        -g --git                        Setup git
        -v --flutter-version            Setup fvm 
        -l --license
        -h --help
        --disable-git
        --disable-config


    Example:

    ftg generate --name my_new_project \\
        --description 'My pretty description' \\
        --author 'Martin Jablečník' \\
        --state-management 'GetX' \\
        --folders-organization 'mvc-function-first' \\
        --project-type 'basic' \\
        --flutter-version 'stable' \\
        --license 'MIT License' 
    "
}


if [[ ${1} == run ]]; then
  bash ${script_path}/generate.sh
elif [[ ${1} == generate ]]; then
  if [[ ${2} == help ]]; then
    show_generator_help
  else
    bash ${script_path}/generate.sh "${@}"
  fi
elif [[ ${1} == change ]]; then
  if [[ ${2} == help ]]; then
    echo "
If you want to change some template, you can run this command and select the template.
Script will generate test project in sandbox directory which you can open it in your editor and change it.
After all changes you can run command: \`ftg convert\` for save.
    "
  else
    bash ${script_path}/change.sh
  fi
elif [[ ${1} == convert ]]; then
  if [[ ${2} == help ]]; then
    echo "
If you want to convert some your existing project into FTG template, 
you can run command: \`ftg convert <path of your project>\` 
    "
  else
    if [[ -z ${2} ]]; then
      bash ${script_path}/convert.sh 
    else
      bash ${script_path}/convert.sh --project-path "${2}"
    fi
  fi
elif [[ ${1} == clean ]]; then
  rm -rf ${ftg_dir_path}/sandbox/* 
else
  echo "
Commands:
  run            run in interactive mode for generate new project 
  generate       generate new project with options 
  change         generate new project in sandbox directory for change any template
  convert        convert and save any existing project into new template  
  clean          clean sandbox

  For more information you can run help after any commands.
  "
fi
